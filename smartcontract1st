// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract purchasingfromcart {
    address private owner;
    uint256 private balance;
    constructor() {
        owner = msg.sender;
        balance = 0;
    }
    function fordiscountoncart(uint256 amount) public {
        require(amount > 700, "Opps! you will not get discount as your amount must be greater than 700");
        balance += amount;
        
    }

    function forshopping(uint256 amount) public {
        require(msg.sender == owner, "only owner can go for shopping");
        require(amount >= 100,"your balance must be greater than 100 to remove item from cart");
        balance -= amount;
    }
    function usingassert() public view returns (uint256) {
        assert(balance >= 0);

        return balance;
    }
    function changingownership(address newowner) public {
        require(msg.sender == owner,"only owner can change ownership");
        if (newowner == address(0)){
            revert("Cannot change ownership with 0 as address");
        }
        owner=newowner;
    }
}
